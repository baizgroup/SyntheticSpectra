function param = intializeModelInputs()
%%  Basics
param.aux.wrot = 1500; %rotating frame freq for fit;
param.aux.taxis = 0:0.02:5; %t1 t3 axis in ps
param.aux.zplength = 10; %zero-pad to 10 ps
%Anharmonicity and correlation time is the same for all peaks
param.input.xo.anh = 16; %Anharmonicity in cm-1
param.input.xo.T2 = 1; %pure dephasing time in ps
param.input.xo.ilw = 03; %inhomogeneous linewidth in cm-1
%% DIAGONALS

%peak A
param.input.xo.A(1,1) = 50;	%concentration
param.input.xo.u(1,1) = 0.26; %transition dipole moment
param.input.xo.Dw(1,1)= 10;	%linewidth (sigma) in cm-1
param.input.xo.w(1,1) = 1675;     %the center frequency in cm-1 relative to param.aux.wrot
param.input.xo.tau1 = 1.5;     % correlation time in ps
param.input.xo.lifetime1 = 1.5;	%vibrational lifetime in ps

%peak B
param.input.xo.A(2,2) = 0; %concentration %no second peak
param.input.xo.u(2,2) = 0.26; %transition dipole moment
param.input.xo.Dw(2,2) = 15; %linewidth (sigma) in cm-1
param.input.xo.w(2,2) = 1680; %the center frequency in cm-1 relative to param.aux.wrot
param.input.xo.tau2 = 1.5; % correlation time in ps
param.input.xo.lifetime2 = 1.5; %vibrational lifetime in ps

%% CROSS PEAKS
% peak A,B
param.input.xo.A(1,2)= 0.0; %kAB + kBA (sum of cross peak growth constants).
param.input.xo.A(2,1)= param.input.xo.A(1,2); % same as above
param.input.xo.u(1,2) = 10; %oscillator strength
param.input.xo.Dw(1,2)= 10;

%% BOUNDARY PARAMETERS
% Lower bounds
param.input.lb.anh      = 0.8;
param.input.lb.tau1     = 1;
param.input.lb.tau2     = 1;
param.input.lb.A(1,1)   = 0.5;
param.input.lb.A(2,2)   = 0;
param.input.lb.A(1,2)   = 1;
param.input.lb.u(1,1)   = 0.5;
param.input.lb.u(2,2)   = 0.5;
param.input.lb.u(1,2)   = 1;
param.input.lb.w(1,1)   = param.input.xo.w(1,1)/1630;%0.99;
param.input.lb.w(2,2)   = 0.99;
param.input.lb.Dw(1,1)  = 0.5;
param.input.lb.Dw(2,2)  = 0.5;
param.input.lb.Dw(1,2)  = 1;
param.input.lb.lifetime1= 0.5;
param.input.lb.lifetime2= 0.5;
param.input.lb.T2       = 0.5;
param.input.lb.ilw       = 1;


% Upper bounds
param.input.ub.anh      = 1.2;
param.input.ub.tau1     = 1;
param.input.ub.tau2     = 1;
param.input.ub.A(1,1)   = 2;
param.input.ub.A(2,2)   = 0;
param.input.ub.A(1,2)   = 1;
param.input.ub.u(1,1)   = 2;
param.input.ub.u(2,2)   = 2;
param.input.ub.u(1,2)   = 1;
param.input.ub.w(1,1)   = param.input.xo.w(1,1)/1720;%1.04;
param.input.ub.w(2,2)   = 1.01; %not used currently
param.input.ub.Dw(1,1)  = 2;
param.input.ub.Dw(2,2)  = 2;
param.input.ub.Dw(1,2)  = 1;
param.input.ub.lifetime1= 2;
param.input.ub.lifetime2= 2;
param.input.ub.T2       = 2;
param.input.ub.ilw       = 2;


%% Pack xo into a vector
param.packed.xo =     [param.input.xo.anh, ...
    param.input.xo.tau1, ...
    param.input.xo.tau2, ...
    param.input.xo.A(1,1) ...
    param.input.xo.A(2,2), ...
    param.input.xo.A(1,2), ...
    param.input.xo.u(1,1) ...
    param.input.xo.u(2,2), ...
    param.input.xo.u(1,2), ...
    param.input.xo.w(1,1), ...
    param.input.xo.w(2,2), ...
    param.input.xo.Dw(1,1), ...
    param.input.xo.Dw(2,2), ...
    param.input.xo.Dw(1,2), ...
    param.input.xo.lifetime1, ...
    param.input.xo.lifetime2, ...
    param.input.xo.T2, ...
    param.input.xo.ilw];

%% Pack boundary variables into vectors;

param.packed.lb =     param.packed.xo .*[param.input.lb.anh, ...
    param.input.lb.tau1, ...
    param.input.lb.tau2, ...
    param.input.lb.A(1,1) ...
    param.input.lb.A(2,2), ...
    param.input.lb.A(1,2), ...
    param.input.lb.u(1,1) ...
    param.input.lb.u(2,2), ...
    param.input.lb.u(1,2), ...
    param.input.lb.w(1,1), ...
    param.input.lb.w(2,2), ...
    param.input.lb.Dw(1,1), ...
    param.input.lb.Dw(2,2), ...
    param.input.lb.Dw(1,2), ...
    param.input.lb.lifetime1, ...
    param.input.lb.lifetime2, ...
    param.input.lb.T2, ...
    param.input.lb.ilw];

param.packed.ub =     param.packed.xo .*[param.input.ub.anh, ...
    param.input.ub.tau1, ...
    param.input.ub.tau2, ...
    param.input.ub.A(1,1) ...
    param.input.ub.A(2,2), ...
    param.input.ub.A(1,2), ...
    param.input.ub.u(1,1) ...
    param.input.ub.u(2,2), ...
    param.input.ub.u(1,2), ...
    param.input.ub.w(1,1), ...
    param.input.ub.w(2,2), ...
    param.input.ub.Dw(1,1), ...
    param.input.ub.Dw(2,2), ...
    param.input.ub.Dw(1,2), ...
    param.input.ub.lifetime1, ...
    param.input.ub.lifetime2, ...
    param.input.ub.T2, ...
    param.input.ub.ilw];

param.packed.random = param.packed.lb + ...
    rand(size(param.packed.xo)).*(param.packed.ub-param.packed.lb);